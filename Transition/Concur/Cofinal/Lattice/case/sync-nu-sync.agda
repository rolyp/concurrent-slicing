open import ConcurrentSlicingCommon
open import Transition.Concur.Cofinal.Lattice.Common

import Relation.Binary.EqReasoning as EqReasoning
import Name as ·¥∫
import Name.Lattice as ·¥∫ÃÉ
import Ren as ·¥ø

module Transition.Concur.Cofinal.Lattice.case.sync-nu-sync
   {Œì} {x u y : Name Œì} {P‚ÇÄ Q‚ÇÄ R‚ÇÄ R‚Ä≤‚ÇÄ S‚ÇÄ S‚Ä≤‚ÇÄ} {E : P‚ÇÄ ‚Äî[ x ‚Ä¢ ·µá - _ ]‚Üí R‚ÇÄ} {E‚Ä≤ : P‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí R‚Ä≤‚ÇÄ}
   {F : Q‚ÇÄ ‚Äî[ ‚Ä¢ x ‚å© y ‚å™ ·∂ú - _ ]‚Üí S‚ÇÄ} {F‚Ä≤ : Q‚ÇÄ ‚Äî[ (‚Ä¢ u) ·µá - _ ]‚Üí S‚Ä≤‚ÇÄ} (ùê∏ : E ‚å£‚ÇÅ[ ·µá‚àá·µá ] E‚Ä≤) (ùêπ : F ‚å£‚ÇÅ[ ·∂ú‚àá·µá ] F‚Ä≤)
   (P : ‚Üì P‚ÇÄ) (Q : ‚Üì Q‚ÇÄ)
   (IH‚ÇÅ : braiding (·µá‚àá·µá {a = x ‚Ä¢} {u ‚Ä¢}) {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P))
   (IH‚ÇÇ : braiding (·∂ú‚àá·µá {a = ‚Ä¢ x ‚å© y ‚å™} {‚Ä¢ u}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q))
   (let
      P‚Ä≤‚ÇÄ = tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏); P‚Ä≥‚ÇÄ = tgt‚ÇÇ(‚äñ‚ÇÅ ùê∏)
      Œ± = let open EqReasoning (setoid _) in
         begin
            ((·¥ø.suc (·¥ø.pop y) *) P‚Ä≤‚ÇÄ)
         ‚â°‚ü® cong (·¥ø.suc (·¥ø.pop y) *) (sym (swap-involutive _ )) ‚ü©
            (·¥ø.suc (·¥ø.pop y) *) ((·¥ø.swap *) ((·¥ø.swap *) P‚Ä≤‚ÇÄ))
         ‚â°‚ü® cong (·¥ø.suc (·¥ø.pop y) *) (cong (·¥ø.swap *) (Œ≥‚ÇÅ ùê∏)) ‚ü©
            (·¥ø.suc (·¥ø.pop y) *) ((·¥ø.swap *) P‚Ä≥‚ÇÄ)
         ‚â°‚ü® suc-pop‚àòswap y _ ‚ü©
            (·¥ø.pop (·¥∫.suc y) *) P‚Ä≥‚ÇÄ
         ‚àé)
   where

   module _
      (pop-y*E‚Ä≤/E : (·¥ø.pop y *) R‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí (·¥ø.suc (·¥ø.pop y) *) (tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏))) (R : ‚Üì R‚ÇÄ) (R‚Ä≤ : ‚Üì R‚Ä≤‚ÇÄ)
      (S : ‚Üì S‚ÇÄ) (S‚Ä≤ : ‚Üì S‚Ä≤‚ÇÄ) (y‚Ä≤ : ‚Üì y) (‚â°R : tgt E P ‚â° R) (‚â°R‚Ä≤ : tgt E‚Ä≤ P ‚â° R‚Ä≤) (‚â°S : tgt F Q ‚â° S)
      (‚â°S‚Ä≤ : tgt F‚Ä≤ Q ‚â° S‚Ä≤) (‚â°pop-y*E‚Ä≤/E : (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) ‚â° pop-y*E‚Ä≤/E)
      where

      module _
         (P‚Ä≤ : ‚Üì (·¥ø.suc (·¥ø.pop y) *) P‚Ä≤‚ÇÄ) (Q‚Ä≤ : ‚Üì tgt‚ÇÅ (‚äñ‚ÇÅ ùêπ)) (P‚Ä≥ : ‚Üì P‚Ä≥‚ÇÄ) (Q‚Ä≥ : ‚Üì tgt‚ÇÇ (‚äñ‚ÇÅ ùêπ)) (y‚Ä† : ‚Üì ·¥∫.suc y)
         (‚â°P‚Ä≤ : tgt pop-y*E‚Ä≤/E ((pop y‚Ä≤ *ÃÉ) R) ‚â° P‚Ä≤) (‚â°Q‚Ä≤ : tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S ‚â° Q‚Ä≤)
         (‚â°P‚Ä≥ : tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) R‚Ä≤ ‚â° P‚Ä≥) (‚â°Q‚Ä≥ : tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤ ‚â° Q‚Ä≥)
         where

         cheat : ·¥∫ÃÉ.suc y‚Ä≤ ‚â° y‚Ä†
         cheat = trustMe

         Œ≤ : P‚Ä≤ ‚âÖ (pop y‚Ä† *ÃÉ) P‚Ä≥
         Œ≤ = let open ‚âÖ-Reasoning in
            begin
               P‚Ä≤
            ‚â°‚ü® sym ‚â°P‚Ä≤ ‚ü©
               tgt pop-y*E‚Ä≤/E ((pop y‚Ä≤ *ÃÉ) R)
            ‚â°‚ü® cong (tgt pop-y*E‚Ä≤/E ‚àò·∂† (pop y‚Ä≤ *ÃÉ)) (sym ‚â°R) ‚ü©
               tgt pop-y*E‚Ä≤/E ((pop y‚Ä≤ *ÃÉ) (tgt E P))
            ‚â°‚ü® cong (Œª E‚Ä† ‚Üí tgt E‚Ä† ((pop y‚Ä≤ *ÃÉ) (tgt E P))) (sym ‚â°pop-y*E‚Ä≤/E) ‚ü©
               tgt ((·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))) ((pop y‚Ä≤ *ÃÉ) (tgt E P))
            ‚â°‚ü® sym (ren·µá-tgt-comm (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (pop y‚Ä≤) (tgt E P)) ‚ü©
               (suc (pop y‚Ä≤) *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))
            ‚âÖ‚ü® ‚âÖ-cong‚ú¥ ‚Üì_ (sym (swap-involutive P‚Ä≤‚ÇÄ))
                       (suc (pop y‚Ä≤) *ÃÉ) (‚âÖ-sym (swap-involutiveÃÉ (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))) ‚ü©
               (suc (pop y‚Ä≤) *ÃÉ) ((swap *ÃÉ) ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))))
            ‚âÖ‚ü® suc-pop‚àòswapÃÉ y‚Ä≤ ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))) ‚ü©
               (pop (·¥∫ÃÉ.suc y‚Ä≤) *ÃÉ) ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))
            ‚â°‚ü® cong (Œª y‚Ä° ‚Üí (pop y‚Ä° *ÃÉ) ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))) cheat ‚ü©
               (pop y‚Ä† *ÃÉ) ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))
            ‚âÖ‚ü® ‚âÖ-cong‚ú¥ ‚Üì_ (Œ≥‚ÇÅ ùê∏) (pop y‚Ä† *ÃÉ) (‚âÖ-sym (reduce-·µá‚àá·µá (Œ≥‚ÇÅ ùê∏) _)) ‚ü©
               (pop y‚Ä† *ÃÉ) (braiding (·µá‚àá·µá {a = x ‚Ä¢} {u ‚Ä¢}) {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))
            ‚â°‚ü® cong (pop y‚Ä† *ÃÉ) IH‚ÇÅ ‚ü©
               (pop y‚Ä† *ÃÉ) (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P))
            ‚â°‚ü® cong ((pop y‚Ä† *ÃÉ) ‚àò·∂† tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))) ‚â°R‚Ä≤ ‚ü©
               (pop y‚Ä† *ÃÉ) (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) R‚Ä≤)
            ‚â°‚ü® cong (pop y‚Ä† *ÃÉ) ‚â°P‚Ä≥ ‚ü©
               (pop y‚Ä† *ÃÉ) P‚Ä≥
            ‚àé

         Œ¥ : Q‚Ä≤ ‚âÖ Q‚Ä≥
         Œ¥ = let open ‚âÖ-Reasoning in
            begin
               Q‚Ä≤
            ‚â°‚ü® sym ‚â°Q‚Ä≤ ‚ü©
               tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S
            ‚â°‚ü® cong (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) (sym ‚â°S) ‚ü©
               tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)
            ‚âÖ‚ü® ‚âÖ-sym (reduce-·∂ú‚àá·µá (Œ≥‚ÇÅ ùêπ) _) ‚ü©
               braiding (·∂ú‚àá·µá {a = ‚Ä¢ x ‚å© y ‚å™} {‚Ä¢ u}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q))
            ‚â°‚ü® IH‚ÇÇ ‚ü©
               tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q)
            ‚â°‚ü® cong (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) ‚â°S‚Ä≤ ‚ü©
               tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤
            ‚â°‚ü® ‚â°Q‚Ä≥ ‚ü©
               Q‚Ä≥
            ‚àé

         base :
            braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (cong ŒΩ_ (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ)))
            [ ŒΩ [ P‚Ä≤ ‚îÇ Q‚Ä≤ ] ]
            ‚â°
            [ ŒΩ [ (pop y‚Ä† *ÃÉ) P‚Ä≥ ‚îÇ Q‚Ä≥ ] ]
         base =
            let open ‚âÖ-Reasoning in ‚âÖ-to-‚â° (
            begin
               braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (cong ŒΩ_ (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ))) [ ŒΩ [ P‚Ä≤ ‚îÇ Q‚Ä≤ ] ]
            ‚âÖ‚ü® reduce-·∂ú‚àá·∂ú (cong ŒΩ_ (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ))) _ ‚ü©
               [ ŒΩ [ P‚Ä≤ ‚îÇ Q‚Ä≤ ] ]
            ‚âÖ‚ü® [ŒΩ-]-cong (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ)) ([-‚îÇ-]-cong Œ± Œ≤ (Œ≥‚ÇÅ ùêπ) Œ¥) ‚ü©
               [ ŒΩ [ (pop y‚Ä† *ÃÉ) P‚Ä≥ ‚îÇ Q‚Ä≥ ] ]
            ‚àé)

      subcase :
         braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (cong ŒΩ_ (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ)))
         (tgt (pop-y*E‚Ä≤/E ‚îÇ·µ• E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) [ (pop y‚Ä≤ *ÃÉ) R ‚îÇ S ])
         ‚â°
         tgt (ŒΩ·∂ú (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏) ‚îÇ‚Ä¢ E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) [ ŒΩ [ R‚Ä≤ ‚îÇ S‚Ä≤ ] ]
      subcase
         with step pop-y*E‚Ä≤/E ((pop y‚Ä≤ *ÃÉ) R) | step (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S | step (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) R‚Ä≤ | step (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤ |
              inspect (step pop-y*E‚Ä≤/E) ((pop y‚Ä≤ *ÃÉ) R) | inspect (step (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) S |
              inspect (step (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))) R‚Ä≤ | inspect (step (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) S‚Ä≤
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | ‚óª , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚óª (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)
      ... | [ .u ‚Ä¢ ·µá ] , P‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , Q‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ y‚Ä† (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥)

   case :
      braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (Œ≥‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))
      (tgt (E‚Ä≤/E (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))) (tgt (E ‚îÇ‚Ä¢ F) [ P ‚îÇ Q ]))
      ‚â°
      (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))) (tgt (E‚Ä≤ ‚îÇ·µ• F‚Ä≤) [ P ‚îÇ Q ]))
   case
      with (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) | inspect (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))
   ... | pop-y*E‚Ä≤/E | [ ‚â°pop-y*E‚Ä≤/E ]
      with step E P | step F Q | step E‚Ä≤ P | step F‚Ä≤ Q |
           inspect (step E) P | inspect (step F) Q | inspect (step E‚Ä≤) P | inspect (step F‚Ä≤) Q
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª(,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ (‚Ä¢ .u) ·µá ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E R R‚Ä≤ S S‚Ä≤ y‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E
