open import ConcurrentSlicingCommon
open import Transition.Concur.Cofinal.Lattice.Common

import Relation.Binary.EqReasoning as EqReasoning
import Name as ·¥∫
import Ren as ·¥ø

module Transition.Concur.Cofinal.Lattice.case.sync-nu-sync
   {Œì} {x u y : Name Œì} {P‚ÇÄ Q‚ÇÄ R‚ÇÄ R‚Ä≤‚ÇÄ S‚ÇÄ S‚Ä≤‚ÇÄ} {E : P‚ÇÄ ‚Äî[ x ‚Ä¢ ·µá - _ ]‚Üí R‚ÇÄ} {E‚Ä≤ : P‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí R‚Ä≤‚ÇÄ}
   {F : Q‚ÇÄ ‚Äî[ ‚Ä¢ x ‚å© y ‚å™ ·∂ú - _ ]‚Üí S‚ÇÄ} {F‚Ä≤ : Q‚ÇÄ ‚Äî[ (‚Ä¢ u) ·µá - _ ]‚Üí S‚Ä≤‚ÇÄ} (ùê∏ : E ‚å£‚ÇÅ[ ·µá‚àá·µá ] E‚Ä≤) (ùêπ : F ‚å£‚ÇÅ[ ·∂ú‚àá·µá ] F‚Ä≤)
   (P : ‚Üì P‚ÇÄ) (Q : ‚Üì Q‚ÇÄ)
   (IH‚ÇÅ : braiding (·µá‚àá·µá {a = x ‚Ä¢} {u ‚Ä¢}) {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P))
   (IH‚ÇÇ : braiding (·∂ú‚àá·µá {a = ‚Ä¢ x ‚å© y ‚å™} {‚Ä¢ u}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q))
   (let
      P‚Ä≤‚ÇÄ = tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏); P‚Ä≥‚ÇÄ = tgt‚ÇÇ(‚äñ‚ÇÅ ùê∏)
      Œ± = let open EqReasoning (setoid _) in
         begin
            ((·¥ø.suc (·¥ø.pop y) *) P‚Ä≤‚ÇÄ)
         ‚â°‚ü® cong (·¥ø.suc (·¥ø.pop y) *) (sym (swap-involutive _ )) ‚ü©
            (·¥ø.suc (·¥ø.pop y) *) ((·¥ø.swap *) ((·¥ø.swap *) P‚Ä≤‚ÇÄ))
         ‚â°‚ü® cong (·¥ø.suc (·¥ø.pop y) *) (cong (·¥ø.swap *) (Œ≥‚ÇÅ ùê∏)) ‚ü©
            (·¥ø.suc (·¥ø.pop y) *) ((·¥ø.swap *) P‚Ä≥‚ÇÄ)
         ‚â°‚ü® suc-pop‚àòswap y _ ‚ü©
            (·¥ø.pop (·¥∫.suc y) *) P‚Ä≥‚ÇÄ
         ‚àé)
   where

   module _
      (pop-y*E‚Ä≤/E : (·¥ø.pop y *) R‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí (·¥ø.suc (·¥ø.pop y) *) (tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏)))
      (‚â°pop-y*E‚Ä≤/E : (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) ‚â° pop-y*E‚Ä≤/E)
      where

   case :
      braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (Œ≥‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))
      (tgt (E‚Ä≤/E (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))) (tgt (E ‚îÇ‚Ä¢ F) [ P ‚îÇ Q ]))
      ‚â°
      (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢·µ• ùêπ))) (tgt (E‚Ä≤ ‚îÇ·µ• F‚Ä≤) [ P ‚îÇ Q ]))
   case
      with (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) | inspect (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))
   ... | pop-y*E‚Ä≤/E | [ ‚â°pop-y*E‚Ä≤/E ]
      with step E P | step F Q | step E‚Ä≤ P | step F‚Ä≤ Q |
           inspect (step E) P | inspect (step F) Q | inspect (step E‚Ä≤) P | inspect (step F‚Ä≤) Q
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      {!!} --
   ... | _ , R | _ , S | _ , R‚Ä≤ | _ , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] = {!!}
{-
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
-}
