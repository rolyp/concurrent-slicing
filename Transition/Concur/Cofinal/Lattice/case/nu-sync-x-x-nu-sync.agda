open import ConcurrentSlicingCommon
import Relation.Binary.EqReasoning as EqReasoning

open import Transition.Concur.Cofinal.Lattice.Common
import Name as ·¥∫
import Ren as ·¥ø

module Transition.Concur.Cofinal.Lattice.case.nu-sync-x-x-nu-sync
   {Œì} {x u : Name Œì} {P‚ÇÄ Q‚ÇÄ R‚ÇÄ R‚Ä≤‚ÇÄ S‚ÇÄ S‚Ä≤‚ÇÄ} {E : P‚ÇÄ ‚Äî[ x ‚Ä¢ ·µá - _ ]‚Üí R‚ÇÄ}
   {E‚Ä≤ : P‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí R‚Ä≤‚ÇÄ} {F : Q‚ÇÄ ‚Äî[ (‚Ä¢ x) ·µá - _ ]‚Üí S‚ÇÄ} {F‚Ä≤ : Q‚ÇÄ ‚Äî[ (‚Ä¢ u) ·µá - _ ]‚Üí S‚Ä≤‚ÇÄ}
   (ùê∏ : E ‚å£‚ÇÅ[ ·µá‚àá·µá ] E‚Ä≤) (ùêπ : F ‚å£‚ÇÅ[ À£‚àáÀ£ ] F‚Ä≤) (P : ‚Üì P‚ÇÄ) (Q : ‚Üì Q‚ÇÄ)
   (let P‚Ä≤‚ÇÄ = tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏); P‚Ä≥‚ÇÄ = tgt‚ÇÇ(‚äñ‚ÇÅ ùê∏); Q‚Ä≤‚ÇÄ = tgt‚ÇÅ (‚äñ‚ÇÅ ùêπ); Q‚Ä≥‚ÇÄ = tgt‚ÇÇ(‚äñ‚ÇÅ ùêπ))
   (IH‚ÇÅ : braiding (·µá‚àá·µá {a = x ‚Ä¢} {u ‚Ä¢}) {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P))
   (IH‚ÇÇ : braiding (À£‚àáÀ£ {x = x} {u}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q))
   (let Œ≥ : (·¥ø.pop ·¥∫.zero *) P‚Ä≤‚ÇÄ ‚â° (·¥ø.pop ·¥∫.zero *) P‚Ä≥‚ÇÄ
        Œ≥ = let open EqReasoning (setoid _) in
          begin
             (·¥ø.pop ·¥∫.zero *) P‚Ä≤‚ÇÄ
          ‚â°‚ü® sym (pop-swap _) ‚ü©
             (·¥ø.pop ·¥∫.zero *) ((·¥ø.swap *) P‚Ä≤‚ÇÄ)
          ‚â°‚ü® cong (·¥ø.pop ·¥∫.zero *) (Œ≥‚ÇÅ ùê∏) ‚ü©
             (·¥ø.pop ·¥∫.zero *) P‚Ä≥‚ÇÄ
          ‚àé
        Œ± : ŒΩ ((·¥ø.pop ·¥∫.zero *) P‚Ä≤‚ÇÄ ‚îÇ Q‚Ä≤‚ÇÄ) ‚â° Proc‚Ü± refl (ŒΩ ((·¥ø.pop ·¥∫.zero *) P‚Ä≥‚ÇÄ ‚îÇ Q‚Ä≥‚ÇÄ))
        Œ± = cong ŒΩ_ (cong‚ÇÇ _‚îÇ_ Œ≥ (Œ≥‚ÇÅ ùêπ))) where

   module _
      (R : ‚Üì R‚ÇÄ) (R‚Ä≤ : ‚Üì R‚Ä≤‚ÇÄ) (S : ‚Üì S‚ÇÄ) (S‚Ä≤ : ‚Üì S‚Ä≤‚ÇÄ) (y y‚Ä≤ : ‚Üì ·¥∫.zero) (‚â°R : tgt E P ‚â° R) (‚â°R‚Ä≤ : tgt E‚Ä≤ P ‚â° R‚Ä≤)
      (‚â°S : tgt F Q ‚â° S) (‚â°S‚Ä≤ : tgt F‚Ä≤ Q ‚â° S‚Ä≤) where

{-
      base : (P‚Ä≤ : ‚Üì (·¥ø.suc id·∂† *) P‚Ä≤‚ÇÄ) (Q‚Ä≤ : ‚Üì Q‚Ä≤‚ÇÄ) (P‚Ä≥ : ‚Üì (·¥ø.suc id·∂† *) P‚Ä≥‚ÇÄ) (Q‚Ä≥ : ‚Üì Q‚Ä≥‚ÇÄ) ‚Üí
             tgt ((id·∂† *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))) ((repl y *ÃÉ) R) ‚â° P‚Ä≤ ‚Üí tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S ‚â° Q‚Ä≤ ‚Üí
             tgt ((id·∂† *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))) ((repl y‚Ä≤ *ÃÉ) R‚Ä≤) ‚â° P‚Ä≥ ‚Üí tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤ ‚â° Q‚Ä≥ ‚Üí (y‚Ä† y‚Ä° : ‚Üì ·¥∫.zero) ‚Üí
             braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} Œ±
             [ ŒΩ [ (pop y‚Ä† *ÃÉ) P‚Ä≤ ‚îÇ Q‚Ä≤ ] ] ‚â° [ ŒΩ [ (pop y‚Ä° *ÃÉ) P‚Ä≥ ‚îÇ Q‚Ä≥ ] ]
      base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ ‚â°P‚Ä≤ ‚â°Q‚Ä≤ ‚â°P‚Ä≥ ‚â°Q‚Ä≥ y‚Ä† y‚Ä° =
         let Œ≤ : (pop y‚Ä† *ÃÉ) P‚Ä≤ ‚âÖ (pop y‚Ä° *ÃÉ) P‚Ä≥
             Œ≤ = let open ‚âÖ-Reasoning in
                begin
                   (pop y‚Ä† *ÃÉ) P‚Ä≤
                ‚â°‚ü® cong (pop y‚Ä† *ÃÉ) (sym ‚â°P‚Ä≤) ‚ü©
                   (pop y‚Ä† *ÃÉ) (tgt ((id·∂† *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))) ((repl y *ÃÉ) R))
                ‚â°‚ü® cong (pop y‚Ä† *ÃÉ) (sym (ren·µá-tgt-comm (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (repl y) R)) ‚ü©
                   (pop y‚Ä† *ÃÉ) ((suc (repl y) *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) R))
                ‚â°‚ü® cong ((pop y‚Ä† *ÃÉ) ‚àò·∂† (suc (repl y) *ÃÉ) ‚àò·∂† tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))) (sym ‚â°R) ‚ü©
                   (pop y‚Ä† *ÃÉ) ((suc (repl y) *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))
                ‚â°‚ü® cong‚ÇÇ (Œª z z‚Ä≤ ‚Üí ((pop z *ÃÉ) ((suc (repl z‚Ä≤) *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))))) trustMe trustMe ‚ü©
                   (pop y‚Ä≤ *ÃÉ) ((suc (repl y‚Ä°) *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)))
                ‚âÖ‚ü® ‚âÖ-sym (pop-swapÃÉ y‚Ä≤ y‚Ä° _) ‚ü©
                   (pop y‚Ä° *ÃÉ) ((suc (repl y‚Ä≤) *ÃÉ) ((swap *ÃÉ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))))
                ‚âÖ‚ü® ‚âÖ-cong‚ú¥ ‚Üì_ (Œ≥‚ÇÅ ùê∏) ((pop y‚Ä° *ÃÉ) ‚àò·∂† (suc (repl y‚Ä≤) *ÃÉ)) (‚âÖ-sym (reduce-·µá‚àá·µá (Œ≥‚ÇÅ ùê∏) _)) ‚ü©
                   (pop y‚Ä° *ÃÉ) ((suc (repl y‚Ä≤) *ÃÉ) (braiding ·µá‚àá·µá {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P))))
                ‚â°‚ü® cong ((pop y‚Ä° *ÃÉ) ‚àò·∂† (suc (repl y‚Ä≤) *ÃÉ)) IH‚ÇÅ ‚ü©
                   (pop y‚Ä° *ÃÉ) ((suc (repl y‚Ä≤) *ÃÉ) (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P)))
                ‚â°‚ü® cong ((pop y‚Ä° *ÃÉ) ‚àò·∂† ((suc (repl y‚Ä≤) *ÃÉ) ‚àò·∂† tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)))) ‚â°R‚Ä≤ ‚ü©
                   (pop y‚Ä° *ÃÉ) ((suc (repl y‚Ä≤) *ÃÉ) (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) R‚Ä≤))
                ‚â°‚ü® cong (pop y‚Ä° *ÃÉ) (ren·µá-tgt-comm (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (repl y‚Ä≤) R‚Ä≤) ‚ü©
                   (pop y‚Ä° *ÃÉ) (tgt ((id·∂† *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))) ((repl y‚Ä≤ *ÃÉ) R‚Ä≤))
                ‚â°‚ü® cong (pop y‚Ä° *ÃÉ) ‚â°P‚Ä≥ ‚ü©
                   (pop y‚Ä° *ÃÉ) P‚Ä≥
                ‚àé
             Œ¥ = Q‚Ä≤ ‚âÖ Q‚Ä≥
             Œ¥ = let open ‚âÖ-Reasoning in
                begin
                   Q‚Ä≤
                ‚â°‚ü® sym ‚â°Q‚Ä≤ ‚ü©
                   tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S
                ‚â°‚ü® cong (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) (sym ‚â°S) ‚ü©
                   tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)
                ‚âÖ‚ü® ‚âÖ-sym (reduce-À£‚àáÀ£ {x = x} {u} (Œ≥‚ÇÅ ùêπ) _) ‚ü©
                   braiding (À£‚àáÀ£ {x = x} {u}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q))
                ‚â°‚ü® IH‚ÇÇ ‚ü©
                   tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q)
                ‚â°‚ü® cong (tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) ‚â°S‚Ä≤ ‚ü©
                   tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤
                ‚â°‚ü® ‚â°Q‚Ä≥ ‚ü©
                   Q‚Ä≥
                ‚àé
             open ‚âÖ-Reasoning in ‚âÖ-to-‚â° (
         begin
            braiding ·∂ú‚àá·∂ú {0} Œ± [ ŒΩ [ (pop y‚Ä† *ÃÉ) P‚Ä≤ ‚îÇ Q‚Ä≤ ] ]
         ‚âÖ‚ü® reduce-·∂ú‚àá·∂ú Œ± _ ‚ü©
            [ ŒΩ [ (pop y‚Ä† *ÃÉ) P‚Ä≤ ‚îÇ Q‚Ä≤ ] ]
         ‚âÖ‚ü® [ŒΩ-]-cong (cong‚ÇÇ _‚îÇ_ Œ≥ (Œ≥‚ÇÅ ùêπ)) ([-‚îÇ-]-cong Œ≥ Œ≤ (Œ≥‚ÇÅ ùêπ) Œ¥) ‚ü©
            [ ŒΩ [ (pop y‚Ä° *ÃÉ) P‚Ä≥ ‚îÇ Q‚Ä≥ ] ]
         ‚àé)
-}

      postulate
       subcase :
             braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} Œ±
             (œÄ‚ÇÇ (step‚Åª (ŒΩ·∂ú (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏) ‚îÇ‚Ä¢ E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) (ŒΩ [ R ‚îÇ S ]))) ‚â°
             œÄ‚ÇÇ (step‚Åª (ŒΩ·∂ú (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏) ‚îÇ‚Ä¢ E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) (ŒΩ [ R‚Ä≤ ‚îÇ S‚Ä≤ ]))

{-
      subcase
         with step ((id·∂† *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏))) ((repl y *ÃÉ) R) | step (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) S |
              step ((id·∂† *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))) ((repl y‚Ä≤ *ÃÉ) R‚Ä≤) | step (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) S‚Ä≤ |
              inspect (step ((id·∂† *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)))) ((repl y *ÃÉ) R) | inspect (step (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) S |
              inspect (step ((id·∂† *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)))) ((repl y‚Ä≤ *ÃÉ) R‚Ä≤) | inspect (step (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) S‚Ä≤
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ q ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä° ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª y‚Ä°
      ... | ‚óª , P‚Ä≤ | [ _ ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | [ _ ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ _ ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | [ _ ] , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | ‚óª , P‚Ä≤ | [ _ ] , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä° ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª y‚Ä°
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ _ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | ‚óª , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä° ‚å™ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) ‚óª y‚Ä°
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) y‚Ä† ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≤ | ‚óª , P‚Ä≥ | [ _ ·∂ú ] , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) y‚Ä† ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | ‚óª , Q‚Ä≥ | [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) y‚Ä† ‚óª
      ... | [ (._ ‚Ä¢) ·µá ] , P‚Ä≤ | [ ‚Ä¢ ._ ‚å© y‚Ä† ‚å™ ·∂ú ] , Q‚Ä≤ | [ (._ ‚Ä¢) ·µá ] , P‚Ä≥ | [ ‚Ä¢ ._ ‚å© y‚Ä° ‚å™ ·∂ú ] , Q‚Ä≥ |
         [ ‚â°P‚Ä≤ ] | [ ‚â°Q‚Ä≤ ] | [ ‚â°P‚Ä≥ ] | [ ‚â°Q‚Ä≥ ] =
         base P‚Ä≤ Q‚Ä≤ P‚Ä≥ Q‚Ä≥ (,-inj‚ÇÇ ‚â°P‚Ä≤) (,-inj‚ÇÇ ‚â°Q‚Ä≤) (,-inj‚ÇÇ ‚â°P‚Ä≥) (,-inj‚ÇÇ ‚â°Q‚Ä≥) y‚Ä† y‚Ä°
-}

   case :
      braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} Œ±
      (tgt (ŒΩ·∂ú (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏) ‚îÇ‚Ä¢ E‚Ä≤/E (‚äñ‚ÇÅ ùêπ))) (tgt (E ‚îÇ·µ• F) [ P ‚îÇ Q ]))
      ‚â°
      (tgt (ŒΩ·∂ú (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏) ‚îÇ‚Ä¢ E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ))) (tgt (E‚Ä≤ ‚îÇ·µ• F‚Ä≤) [ P ‚îÇ Q ]))
   case
      with step E‚Ä≤ P | step E P | step F‚Ä≤ Q | step F Q |
           inspect (step E‚Ä≤) P | inspect (step E) P | inspect (step F‚Ä≤) Q | inspect (step F) Q
   ... | _ , R‚Ä≤ | _ , R | _ , S‚Ä≤ | _ , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] = {!!}
{-
   ... | ‚óª , R‚Ä≤ | ‚óª , R | ‚óª , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | ‚óª , R | ‚óª , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | ‚óª , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | ‚óª , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | ‚óª , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | ‚óª , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ zero ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | ‚óª , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ zero ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , R | ‚óª , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , R | ‚óª , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª zero (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª zero (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | ‚óª , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | ‚óª , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ zero ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | ‚óª , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ ‚óª zero (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
   ... | [ ._ ‚Ä¢ ·µá ] , R‚Ä≤ | [ ._ ‚Ä¢ ·µá ] , R | [ (‚Ä¢ ._) ·µá ] , S‚Ä≤ | [ (‚Ä¢ ._) ·µá ] , S | [ ‚â°R‚Ä≤ ] | [ ‚â°R ] | [ ‚â°S‚Ä≤ ] | [ ‚â°S ] =
      subcase R R‚Ä≤ S S‚Ä≤ zero zero (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤)
-}
