open import ConcurrentSlicingCommon
open import Transition.Concur.Cofinal.Lattice.Common

import Relation.Binary.EqReasoning as EqReasoning
import Ren as ·¥ø

module Transition.Concur.Cofinal.Lattice.case.sync-sync
   {Œì} {x y u z : Name Œì} {P‚ÇÄ Q‚ÇÄ R‚ÇÄ R‚Ä≤‚ÇÄ S‚ÇÄ S‚Ä≤‚ÇÄ} {E : P‚ÇÄ ‚Äî[ x ‚Ä¢ ·µá - _ ]‚Üí R‚ÇÄ} {E‚Ä≤ : P‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí R‚Ä≤‚ÇÄ}
   {F : Q‚ÇÄ ‚Äî[ ‚Ä¢ x ‚å© y ‚å™ ·∂ú - _ ]‚Üí S‚ÇÄ} {F‚Ä≤ : Q‚ÇÄ ‚Äî[ ‚Ä¢ u ‚å© z ‚å™ ·∂ú - _ ]‚Üí S‚Ä≤‚ÇÄ} (ùê∏ : E ‚å£‚ÇÅ[ ·µá‚àá·µá ] E‚Ä≤) (ùêπ : F ‚å£‚ÇÅ[ ·∂ú‚àá·∂ú ] F‚Ä≤)
   (P : ‚Üì P‚ÇÄ) (Q : ‚Üì Q‚ÇÄ)
   (IH‚ÇÅ : braiding (·µá‚àá·µá {a = x ‚Ä¢} {u ‚Ä¢}) {0} (Œ≥‚ÇÅ ùê∏) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) (tgt E P)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) (tgt E‚Ä≤ P))
   (IH‚ÇÇ : braiding (·∂ú‚àá·∂ú {a = ‚Ä¢ x ‚å© y ‚å™} {‚Ä¢ u ‚å© z ‚å™}) {0} (Œ≥‚ÇÅ ùêπ) (tgt (E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) (tgt F Q)) ‚â° tgt (E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) (tgt F‚Ä≤ Q))
   (let
      P‚Ä≤‚ÇÄ = tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏); P‚Ä≥‚ÇÄ = tgt‚ÇÇ(‚äñ‚ÇÅ ùê∏)
      open EqReasoning (setoid _)
      Œ± =
         begin
            (·¥ø.pop z *) ((·¥ø.suc (·¥ø.pop y) *) P‚Ä≤‚ÇÄ)
         ‚â°‚ü® sym (pop-pop-swap y z _) ‚ü©
            (·¥ø.pop y *) ((·¥ø.suc (·¥ø.pop z) *) ((·¥ø.swap *) P‚Ä≤‚ÇÄ))
         ‚â°‚ü® cong (·¥ø.pop y *) (cong (·¥ø.suc (·¥ø.pop z) *) (Œ≥‚ÇÅ ùê∏)) ‚ü©
            (·¥ø.pop y *) ((·¥ø.suc (·¥ø.pop z) *) P‚Ä≥‚ÇÄ)
         ‚àé)
   where

   module _
      (pop-y*E‚Ä≤/E : (·¥ø.pop y *) R‚ÇÄ ‚Äî[ u ‚Ä¢ ·µá - _ ]‚Üí (·¥ø.suc (·¥ø.pop y) *) (tgt‚ÇÅ (‚äñ‚ÇÅ ùê∏)))
      (pop-z*E/E‚Ä≤ : (·¥ø.pop z *) R‚Ä≤‚ÇÄ ‚Äî[ (x ‚Ä¢) ·µá - _ ]‚Üí (·¥ø.suc (·¥ø.pop z) *) (tgt‚ÇÇ (‚äñ‚ÇÅ ùê∏)))
      (R : ‚Üì R‚ÇÄ) (R‚Ä≤ : ‚Üì R‚Ä≤‚ÇÄ) (S : ‚Üì S‚ÇÄ) (S‚Ä≤ : ‚Üì S‚Ä≤‚ÇÄ) (y‚Ä≤ : ‚Üì y) (z‚Ä≤ : ‚Üì z)
      (‚â°R : tgt E P ‚â° R) (‚â°R‚Ä≤ : tgt E‚Ä≤ P ‚â° R‚Ä≤) (‚â°S : tgt F Q ‚â° S) (‚â°S‚Ä≤ : tgt F‚Ä≤ Q ‚â° S‚Ä≤)
      (‚â°pop-y*E‚Ä≤/E : (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) ‚â° pop-y*E‚Ä≤/E)
      (‚â°pop-z*E/E‚Ä≤ : (·¥ø.pop z *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) ‚â° pop-z*E/E‚Ä≤)
      where

      postulate
       subcase :
         braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ))
         (œÄ‚ÇÇ (step‚Åª (pop-y*E‚Ä≤/E ‚îÇ‚Ä¢ E‚Ä≤/E (‚äñ‚ÇÅ ùêπ)) ((pop y‚Ä≤ *ÃÉ) R ‚îÇ S)))
         ‚â°
         œÄ‚ÇÇ (step‚Åª (pop-z*E/E‚Ä≤ ‚îÇ‚Ä¢ E/E‚Ä≤ (‚äñ‚ÇÅ ùêπ)) ((pop z‚Ä≤ *ÃÉ) R‚Ä≤ ‚îÇ S‚Ä≤))

   case :
      braiding (·∂ú‚àá·∂ú {a = œÑ} {œÑ}) {0} (cong‚ÇÇ _‚îÇ_ Œ± (Œ≥‚ÇÅ ùêπ))
      (tgt (E‚Ä≤/E (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢ ùêπ))) (tgt (E ‚îÇ‚Ä¢ F) [ P ‚îÇ Q ]))
      ‚â°
      tgt (E/E‚Ä≤ (‚äñ‚ÇÅ (ùê∏ ‚îÇ‚Ä¢ ùêπ))) (tgt (E‚Ä≤ ‚îÇ‚Ä¢ F‚Ä≤) [ P ‚îÇ Q ])
   case
      with (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) | (·¥ø.pop z *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏)) |
           inspect (·¥ø.pop y *·µá) (E‚Ä≤/E (‚äñ‚ÇÅ ùê∏)) | inspect (·¥ø.pop z *·µá) (E/E‚Ä≤ (‚äñ‚ÇÅ ùê∏))
   ... | pop-y*E‚Ä≤/E | pop-z*E/E‚Ä≤ | [ ‚â°pop-y*E‚Ä≤/E ] | [ ‚â°pop-z*E/E‚Ä≤ ]
      with step E P | step F Q | step E‚Ä≤ P | step F‚Ä≤ Q |
           inspect (step E) P | inspect (step F) Q | inspect (step E‚Ä≤) P | inspect (step F‚Ä≤) Q
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | ‚óª , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | ‚óª , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | ‚óª , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
       [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ ‚óª z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | ‚óª , S‚Ä≤ | [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | ‚óª , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | ‚óª , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ ‚óª (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
   ... | [ .x ‚Ä¢ ·µá ] , R | [ ‚Ä¢ .x ‚å© y‚Ä≤ ‚å™ ·∂ú ] , S | [ .u ‚Ä¢ ·µá ] , R‚Ä≤ | [ ‚Ä¢ .u ‚å© z‚Ä≤ ‚å™ ·∂ú ] , S‚Ä≤ |
      [ ‚â°R ] | [ ‚â°S ] | [ ‚â°R‚Ä≤ ] | [ ‚â°S‚Ä≤ ] =
      subcase pop-y*E‚Ä≤/E pop-z*E/E‚Ä≤ R R‚Ä≤ S S‚Ä≤ y‚Ä≤ z‚Ä≤ (,-inj‚ÇÇ ‚â°R) (,-inj‚ÇÇ ‚â°R‚Ä≤) (,-inj‚ÇÇ ‚â°S) (,-inj‚ÇÇ ‚â°S‚Ä≤) ‚â°pop-y*E‚Ä≤/E ‚â°pop-z*E/E‚Ä≤
